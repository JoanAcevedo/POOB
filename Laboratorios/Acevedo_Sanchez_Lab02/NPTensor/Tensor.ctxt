#BlueJ class context
comment0.target=Tensor
comment0.text=\r\n\ @author\ ECI,\ 2023\r\n\r\n
comment1.params=shape\ value
comment1.target=Tensor(int[],\ int)
comment1.text=\r\n\ Creates\ a\ tensor\ with\ the\ defined\ size\ and\ value\r\n\ \r\n\ @param\ shape,\ arreglo\ de\ enteros\ que\ define\ la\ dimension\ del\ Tensor\r\n\ @param\ value,\ unico\ valor\ que\ va\ a\ Tensor\ en\ su\ interior\r\n
comment10.params=t
comment10.target=Tensor\ add(Tensor)
comment10.text=\r\n\ Recibe\ un\ Tensor\ y\ suma\ sus\ valores\ a\ un\ Tensor\ ya\ existente\r\n\ \r\n\ @param\ t,\ nuevo\ Tensor\r\n\ @return\ Tensor\ con\ los\ nuevos\ valores\r\n
comment11.params=other
comment11.target=Tensor\ subtract(Tensor)
comment11.text=\r\n\ Recibe\ un\ Tensor\ y\ resta\ sus\ valores\ a\ un\ Tensor\ ya\ existente\r\n\ \r\n\ @param\ other,\ nuevo\ Tensor\r\n\ @return\ Tensor\ con\ los\ nuevos\ valores\r\n
comment12.params=other
comment12.target=Tensor\ multiply(Tensor)
comment12.text=\r\n\ Recibe\ un\ Tensor\ y\ multiplica\ sus\ valores\ a\ un\ Tensor\ ya\ existente\r\n\ \r\n\ @param\ other,\ nuevo\ Tensor\r\n\ @return\ Tensor\ con\ los\ nuevos\ valores\r\n
comment13.params=other
comment13.target=boolean\ equals(Tensor)
comment13.text=\r\n\ Compara\ un\ Tensor\ con\ otro\r\n\ \r\n\ @param\ other,\ Tensor\ con\ el\ que\ va\ a\ ser\ comparado\r\n\ @return\ Verdadero\ o\ falso\ seg\u00FAn\ corresponda\r\n
comment14.params=other
comment14.target=boolean\ equals(java.lang.Object)
comment15.params=
comment15.target=java.lang.String\ toString()
comment16.params=
comment16.target=int[]\ getShape()
comment16.text=\r\n\ Retorna\ la\ figura\ del\ Tensor\r\n\ \r\n\ @return\ int[]\ figura\ del\ Tensor\r\n
comment17.params=shape
comment17.target=int\ calculateSize(int[])
comment17.text=\r\n\ Calcula\ el\ tama\u00F1o\ de\ shape\r\n
comment2.params=shape\ values
comment2.target=Tensor(int[],\ int[])
comment2.text=\r\n\ Creates\ a\ tensor\ with\ the\ defined\ size\ and\ value\r\n\ \r\n\ @param\ shape,\ arreglo\ de\ enteros\ que\ define\ la\ dimension\ del\ Tensor\r\n\ @param\ value,\ arreglo\ de\ valores\ que\ va\ a\ Tensor\ en\ su\ interior\r\n
comment3.params=
comment3.target=Tensor\ shape()
comment3.text=\r\n\ \r\n
comment4.params=newShape
comment4.target=Tensor\ reshape(int[])
comment4.text=\r\n\ Cambia\ la\ figura\ de\ un\ Tensor\ ya\ existente\r\n\ \r\n\ @param\ newShape,\ nueva\ figura\ que\ va\ a\ tener\ el\ Tensor\ ya\ existente\r\n\ @return\ Tensor\ con\ la\ nueva\ figura\r\n
comment5.params=
comment5.target=Tensor\ shuffle()
comment5.text=\r\n\ Realiza\ una\ operacion\ de\ barajado\ de\ los\ valores\ en\ el\ Tensor\ original\r\n\ \r\n\ @return\ Tensor\ con\ los\ nuevos\ valores\r\n
comment6.params=index
comment6.target=int\ value(int[])
comment6.text=\r\n\ \r\n
comment7.params=start\ end\ step
comment7.target=Tensor\ slide(int,\ int,\ int)
comment7.text=\r\n\ Devuelve\ un\ nuevo\ Tensor\ que\ representa\ una\ rebanada\ del\ tensor\ original\r\n\ \r\n\ @param\ start,\ inicio\ del\ Tensor\r\n\ @param\ end,\ fin\ del\ Tensor\r\n\ @param\ step,\r\n
comment8.params=axis
comment8.target=Tensor\ mean(int)
comment8.text=\r\n\ Calcula\ la\ media\ a\ lo\ largo\ del\ eje\ especificado\r\n\ \r\n\ @param\ axis,\ eje\ en\ el\ que\ se\ calculara\ la\ media\ \r\n
comment9.params=value
comment9.target=Tensor\ find(int)
comment9.text=\r\n\ Busca\ el\ valor\ especificado\ en\ el\ Tensor\ y\ devuelve\ un\ nuevo\ Tensor\r\n\ \r\n\ @param\ value,\ valor\ que\ se\ desea\ buscar\r\n
numComments=18
