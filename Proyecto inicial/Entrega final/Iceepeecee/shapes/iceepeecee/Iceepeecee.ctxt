#BlueJ class context
comment0.target=Iceepeecee
comment0.text=\r\n\ Iceepeecee\ es\ un\ simulador\ basado\ en\ el\ problema\ F\ de\ la\ maraton\r\n\ de\ programacion\ internacional\ 2022\ Islands\ from\ the\ Sky\r\n\r\n\ @author\ Joan\ Acevedo\r\n\ @version\ 29/10/2023\r\n
comment1.params=length\ width
comment1.target=Iceepeecee(int,\ int)
comment1.text=\r\n\ Crea\ el\ territorio\ donde\ se\ realizara\ la\ simulacion\r\n\ \r\n\ @param\ length,\ largo\ del\ territorio,\ valores\ entre\ (1\ -\ 700)\r\n\ @param\ width,\ ancho\ del\ territorio,\ valores\ entre\ (1\ -\ 700)\r\n\ @throws\ TERRITORIO_IMPOSIBLE\ si\ los\ valores\ de\ length\ y\ width\ no\ son\ validos\r\n
comment10.params=color
comment10.target=void\ delIsland(java.lang.String)
comment10.text=\r\n\ Elimina\ una\ isla\ del\ territorio\r\n\ \r\n\ @param\ color,\ color\ que\ identifica\ a\ la\ isla\r\n\ @throws\ ISLA_FIXED\ si\ trata\ de\ borrar\ una\ isla\ tipo\ Fixed\r\n\ @throws\ ISLA_NULL\ si\ trata\ de\ borrar\ una\ isla\ que\ no\ existe\r\n
comment11.params=color
comment11.target=void\ delFligth(java.lang.String)
comment11.text=\r\n\ Elimina\ un\ vuelo\ del\ territorio\r\n\ \r\n\ @param\ color,\ color\ que\ identifica\ el\ vuelo\r\n\ @throws\ VUELO_NULL\ si\ trata\ de\ borra\ un\ vuelo\ que\ no\ existe\r\n
comment12.params=island
comment12.target=int[][]\ islandLocation(java.lang.String)
comment12.text=\r\n\ Devuelve\ la\ locacion\ de\ una\ isla\ determinada\r\n\ \r\n\ @param\ island,\ color\ que\ identifica\ a\ la\ isla\r\n\ @return\ la\ locacion\ de\ la\ isla\r\n\ @throws\ ISLA_NULL\ si\ la\ isla\ que\ no\ existe\r\n
comment13.params=fligth
comment13.target=int[][]\ fligthLocation(java.lang.String)
comment13.text=\r\n\ Devuelve\ la\ locacion\ de\ un\ vuelo\ determinado\r\n\ \r\n\ @param\ island,\ color\ que\ identifica\ al\ vuelo\r\n\ @return\ la\ locacion\ del\ vuelo\r\n\ @throws\ VUELO_NULL\ si\ el\ un\ vuelo\ que\ no\ existe\r\n
comment14.params=color
comment14.target=float\ fligthCamera(java.lang.String)
comment14.text=\r\n\ Devuelve\ el\ angulo\ de\ una\ foto\ en\ especifico\r\n\ \r\n\ @param\ color,\ color\ de\ la\ foto\r\n\ @return\ entero\ con\ el\ angulo\ de\ la\ foto\r\n\ @throws\ VUELO_NULL\ si\ el\ un\ vuelo\ que\ no\ existe\r\n\ @throws\ FOTO_NULL\ si\ el\ vuelo\ no\ ha\ realizado\ una\ foto\r\n
comment15.params=
comment15.target=java.lang.String[]\ islands()
comment15.text=\r\n\ Devuelve\ un\ arreglo\ con\ los\ identificadores\ de\ las\ islas\ (color)\r\n\ \r\n\ @return\ String[]\ con\ las\ islas\ (color)\r\n
comment16.params=
comment16.target=java.lang.String[]\ fligths()
comment16.text=\r\n\ Devuelve\ un\ arreglo\ con\ los\ identificadores\ de\ las\ islas\ (color)\r\n\ \r\n\ @return\ String[]\ con\ las\ islas\ (color)\r\n
comment17.params=
comment17.target=java.lang.String[]\ observedIslands()
comment17.text=\r\n\ Nos\ indica\ cuales\ islas\ estan\ siendo\ observadas\ por\ una\ fotografia\r\n\ \r\n\ @String[]\ con\ los\ nombres\ de\ las\ islas\ observadas\r\n
comment18.params=
comment18.target=java.lang.String[]\ uselessFlights()
comment18.text=\r\n\ Nos\ indica\ cuando\ un\ vuelo\ es\ inutil,\ es\ decir\ cuando\ no\r\n\ captura\ una\ isla\ por\ completo\r\n\ \r\n\ @String[]\ con\ los\ nombres\ de\ los\ vuelos\ inutiles\r\n
comment19.params=
comment19.target=void\ makeVisible()
comment19.text=\r\n\ Hace\ visible\ todo\ lo\ que\ se\ encuentre\ dentro\ del\ territorio\r\n
comment2.params=islands\ fligths
comment2.target=Iceepeecee(int[][][],\ int[][][])
comment2.text=\r\n\ Constructor\ con\ la\ entrada\ apropiada\ a\ la\ del\ maraton\r\n\ \r\n\ @param\ islands,\ conjunto\ de\ islas\ a\ ingresar\r\n\ @param\ fligths,\ conjuntos\ de\ vuelos\ a\ ingresar\r\n\ @throws\ SALE_DEL_TERRITORIO\ si\ las\ coordenadas\ de\ las\ islas\ o\ vuelos\ no\ son\ validos\r\n
comment20.params=
comment20.target=void\ makeInvisible()
comment20.text=\r\n\ Hace\ invisible\ todo\ lo\ que\ se\ encuentre\ dentro\ del\ territorio\r\n
comment21.params=
comment21.target=boolean\ ok()
comment21.text=\r\n\ Indica\ si\ la\ ultima\ accion\ se\ pudo\ realizar\r\n
comment22.params=
comment22.target=void\ finish()
comment22.text=\r\n\ Finaliza\ la\ simulacion\r\n
comment23.params=
comment23.target=void\ pintarIsla()
comment23.text=\r\n\ Pinta\ las\ islas\ que\ son\ visibles\ ante\ un\ vuelo\ con\ una\ marca\ que\ las\ identifica\r\n
comment24.params=
comment24.target=void\ hacerFotosInvisibles()
comment24.text=\r\n\ Realiza\ las\ fotografias\ de\ los\ vuelos\ invisibles\r\n
comment25.params=type\ color\ polygon
comment25.target=void\ selectIsland(java.lang.String,\ java.lang.String,\ int[][])
comment25.text=\r\n\ Crea\ una\ isla\ segun\ el\ tipo\ ingresado\r\n\ \r\n\ @param\ type,\ 'n'\ normal,\ 'f'\ fixed,\ 's'\ surprising\r\n\ @param\ color,\ color\ de\ la\ isla\r\n\ @param\ polygon,\ puntos\ con\ coordenadas\ de\ la\ isla\r\n\ @throws\ ISLA_REPETIDA\ si\ ya\ existe\ otra\ isla\ con\ el\ mismo\ color\r\n\ @throws\ TIPO_INEXISTENTE_ISLA\ si\ ingreso\ un\ tipo\ de\ isla\ invalido\r\n\ @throws\ SALE_DEL_TERRITORIO\ si\ las\ coordenadas\ de\ la\ isla\ no\ son\ validos\r\n
comment26.params=type\ color\ from\ to
comment26.target=void\ selectFligth(java.lang.String,\ java.lang.String,\ int[],\ int[])
comment26.text=\r\n\ Crea\ un\ vuelo\ de\ un\ detrminado\ tipo\ al\ territorio\r\n\ \r\n\ @param\ type,\ 'n'\ normal,\ 'l'\ lazy,\ 'f'\ flat\r\n\ @param\ color,\ color\ del\ vuelo\r\n\ @param\ polygon,\ puntos\ con\ coordenadas\ del\ vuelo\r\n\ @throws\ VUELO_REPETIDO\ si\ ya\ existe\ otro\ vuelo\ con\ el\ mismo\ color\r\n\ @throws\ TIPO_INEXISTENTE_VUELO\ si\ ingreso\ un\ tipo\ de\ vuelo\ invalido\r\n\ @throws\ SALE_DEL_TERRITORIO\ si\ las\ coordenadas\ del\ vuelo\ no\ son\ validos\r\n
comment27.params=
comment27.target=java.lang.String\ anyColor()
comment27.text=\r\n\ Genera\ un\ color\ aleatorio\r\n\ \r\n\ @return\ String\ con\ el\ nombre\ del\ color\ generado\r\n
comment3.params=color\ polygon
comment3.target=void\ addIsland(java.lang.String,\ int[][])
comment3.text=\r\n\ Agrega\ una\ isla\ al\ territorio\r\n\ \r\n\ @param\ color,\ color\ de\ la\ isla\r\n\ @param\ polygon,\ puntos\ con\ coordenadas\ de\ la\ isla\r\n\ @throws\ ISLA_REPETIDA\ si\ ya\ existe\ otra\ isla\ con\ el\ mismo\ color\r\n\ @throws\ SALE_DEL_TERRITORIO\ si\ las\ coordenadas\ de\ la\ isla\ no\ son\ validos\r\n
comment4.params=type\ color\ polygon
comment4.target=void\ addIsland(java.lang.String,\ java.lang.String,\ int[][])
comment4.text=\r\n\ Agrega\ una\ isla\ de\ un\ determinado\ tipo\ al\ territorio\r\n\ \r\n\ @param\ type,\ 'n'\ normal,\ 'f'\ fixed,\ 's'\ surprising\r\n\ @param\ color,\ color\ de\ la\ isla\r\n\ @param\ polygon,\ puntos\ con\ coordenadas\ de\ la\ isla\r\n\ @throws\ ISLA_REPETIDA\ si\ ya\ existe\ otra\ isla\ con\ el\ mismo\ color\r\n\ @throws\ TIPO_INEXISTENTE_ISLA\ si\ ingreso\ un\ tipo\ de\ isla\ invalido\r\n\ @throws\ SALE_DEL_TERRITORIO\ si\ las\ coordenadas\ de\ la\ isla\ no\ son\ validos\r\n
comment5.params=color\ from\ to
comment5.target=void\ addFligth(java.lang.String,\ int[],\ int[])
comment5.text=\r\n\ Agrega\ un\ vuelo\ al\ territorio\r\n\ \r\n\ @param\ color,\ color\ del\ vuelo\r\n\ @param\ from,\ punto\ de\ despegue\r\n\ @param\ to,\ punto\ de\ llegada\r\n\ @throws\ VUELO_REPETIDO\ si\ ya\ existe\ otro\ vuelo\ con\ el\ mismo\ color\r\n\ @throws\ SALE_DEL_TERRITORIO\ si\ las\ coordenadas\ del\ vuelo\ no\ son\ validos\r\n
comment6.params=type\ color\ from\ to
comment6.target=void\ addFligth(java.lang.String,\ java.lang.String,\ int[],\ int[])
comment6.text=\r\n\ Agrega\ un\ vuelo\ de\ un\ detrminado\ tipo\ al\ territorio\r\n\ \r\n\ @param\ type,\ 'n'\ normal,\ 'l'\ lazy,\ 'f'\ flat\r\n\ @param\ color,\ color\ del\ vuelo\r\n\ @param\ polygon,\ puntos\ con\ coordenadas\ del\ vuelo\r\n\ @throws\ VUELO_REPETIDO\ si\ ya\ existe\ otro\ vuelo\ con\ el\ mismo\ color\r\n\ @throws\ TIPO_INEXISTENTE_VUELO\ si\ ingreso\ un\ tipo\ de\ vuelo\ invalido\r\n\ @throws\ SALE_DEL_TERRITORIO\ si\ las\ coordenadas\ del\ vuelo\ no\ son\ validos\r\n
comment7.params=fligth\ teta
comment7.target=void\ photograph(java.lang.String,\ int)
comment7.text=\r\n\ Un\ vuelo\ realiza\ una\ fotografia\r\n\ \r\n\ @param\ fligth,\ color\ del\ vuelo\ que\ va\ a\ tomar\ la\ foto\r\n\ @param\ teta,\ angulo\ entero\ entre\ 1\ y\ 180\r\n\ @throws\ ANGULO_INCORRECTO\ si\ el\ angulo\ no\ tiene\ un\ valor\ valido\r\n\ @throws\ VUELO_NULL\ si\ el\ vuelo\ no\ existe\r\n\ @throws\ VUELO_LAZY\ si\ un\ vuelo\ Lazy\ ya\ tomo\ una\ foto\r\n
comment8.params=teta
comment8.target=void\ photograph(int)
comment8.text=\r\n\ Todos\ los\ vuelos\ realizan\ una\ foto\r\n\ \r\n\ @param\ teta,\ angulo\ entero\ de\ la\ foto\ entre\ 1\ y\ 180\r\n\ @throws\ ANGULO_INCORRECTO\ si\ el\ angulo\ no\ tiene\ un\ valor\ valido\r\n\ @throws\ VUELO_LAZY\ si\ un\ vuelo\ Lazy\ ya\ tomo\ una\ foto\r\n
comment9.params=teta
comment9.target=void\ photograph(float)
comment9.text=\r\n\ Todos\ los\ vuelos\ realizan\ una\ foto\r\n\ \r\n\ @param\ teta,\ angulo\ decimal\ de\ la\ foto\ entre\ 1\ y\ 180\r\n\ @throws\ ANGULO_INCORRECTO\ si\ el\ angulo\ no\ tiene\ un\ valor\ valido\r\n\ @throws\ VUELO_LAZY\ si\ un\ vuelo\ Lazy\ ya\ tomo\ una\ foto\r\n
numComments=28
